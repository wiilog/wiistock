{% import 'form.html.twig' as form %}

{% set receptionLine = receptionReferenceArticle.receptionLine %}
<div class="row">
    <div class="form-group {{ reception.hasPacks ? 'col-xl-6' : 'col-md-6' }} col-12  w-100 mb-3">
        {{ form.select("referenceArticle", trans('Stock', 'Références', 'référence'), true, {
            items: [{
                label: receptionReferenceArticle.referenceArticle.reference,
                value: receptionReferenceArticle.referenceArticle.id,
                selected: true,
            }],
            disabled: receptionReferenceArticle.receptionBegun,
        }) }}
    </div>
    {% if reception.hasPacks %}
        <div class="form-group col-xl-6 col-12">
            {% set pack = receptionLine.pack %}
            {% if not receptionReferenceArticle.receptionBegun %}
                {{ form.select('pack', trans('Traçabilité', 'Général', 'Unité logistique'), false, {
                    type: 'receptionLogisticUnits',
                    additionalAttributes : [
                        {
                            name: 'data-other-params',
                            value: '1',
                        }, {
                            name: 'data-other-params-reception',
                            value: reception.id,
                        }
                    ],
                    items: pack ? [{
                        value: pack.id,
                        label: pack.code,
                        selected: true,
                    }] : null,
                }) }}
            {% else %}
                {{ form.input('packCode', trans('Traçabilité', 'Général', 'Unité logistique'), false, pack ? pack.code, {
                    disabled: true,
                }) }}
                {{ form.hidden('pack', pack ? pack.id) }}
            {% endif %}
        </div>
    {% endif %}
    <div class="form-group col-md-6 col-12">
        {% if reception.orderNumber is not empty %}
            {{ form.select("commande", "Numéro de commande d'achat", true, {
                items: reception.orderNumber|map((orderNumber) => {
                    label: orderNumber,
                    value: orderNumber,
                    selected: receptionReferenceArticle.commande == orderNumber,
                }),
                disabled: receptionReferenceArticle.receptionBegun,
            }) }}
        {% else %}
            {{ form.input("commande", "Numéro de commande d'achat", true, receptionReferenceArticle.commande, {
                disabled: receptionReferenceArticle.receptionBegun,
            }) }}
        {% endif %}
    </div>
    <div class="form-group col-md-6 col-12">
        {{ form.input("quantiteAR", "Quantité à recevoir", true, receptionReferenceArticle.quantiteAR, {
            type: "number",
            min: minValue,
            attributes: {
                onChange: "updateQuantityToReceive($(this));",
            },
        }) }}
    </div>
    {% if canUpdateQuantity %}
        <div class="form-group col-md-6 col-12">
            {{ form.input("quantite", "Quantité reçue", true, receptionReferenceArticle.quantite ?: 0, {
                type: "number",
                min: 0,
                max: receptionReferenceArticle.quantiteAR,
            }) }}
        </div>
    {% endif %}
    <div class="form-group col-md-6 col-12">
        {% set field = constant('App\\Entity\\Fields\\FixedFieldEnum::unitPrice') %}
        {{ form.input(field.name, field.value, false, receptionReferenceArticle.unitPrice, {
            type: "number",
            min: 0,
            step: 0.001,
        }) }}
    </div>
    <div class="form-group col-md-6 col-12 d-flex align-items-center">
        {{ form.checkbox("anomalie", "Anomalie", false, receptionReferenceArticle.anomalie) }}
    </div>
    <div class="form-group col-12">
        {{ form.wysiwyg("commentaire", "Commentaire", false, receptionReferenceArticle.commentaire) }}
    </div>
</div>
