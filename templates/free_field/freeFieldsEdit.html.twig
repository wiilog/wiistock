{% import 'form.html.twig' as form %}

{% set disabledNeeded = disabledNeeded is defined ? disabledNeeded : false %}
{% set fieldNameClass = fieldNameClass is defined and fieldNameClass ? fieldNameClass : '' %}
{% set containerClasses = containerClasses is defined and containerClasses ? containerClasses : 'row' %}

{% if freeFields|length > 0 %}
    <div class="{{ containerClasses }}">
        {% for freeField in freeFields %}
            {% set needed = not disabledNeeded and attribute(freeField, requiredType) %}
            {% set entityValue = freeFieldValues[freeField.id] is defined
                ? freeFieldValues[freeField.id]
                : (freeField.defaultValue is defined
                    ? freeField.defaultValue
                    : '') %}
            {% if (actionType == 'new' and freeField.displayedCreate) or actionType == 'edit' %}
                <div class="{{ colType is defined ? colType }} {% if showLabels ?? true %}my-2{% endif %}">
                    <div class="row form-group free-field mb-0 ">
                        <div class="col-12 d-flex">
                            {% set label = freeField.labelIn(language_service.getCurrentUserLanguageSlug, language_service.defaultSlug)
                                ?: freeField.label %}
                            {% set displayedLabel = (showLabels ?? true) ? label : '' %}
                            {% if freeField.typage == constant('App\\Entity\\FreeField::TYPE_BOOL') %}
                                {% if freeFieldValues[freeField.id] is defined %}
                                    {% set entityValue = freeFieldValues[freeField.id] %}
                                {% elseif freeField.defaultValue is defined %}
                                    {% set entityValue = freeField.defaultValue %}
                                {% else %}
                                    {% set entityValue = 0 %}
                                {% endif %}
                                {{ form.switch(freeField.id, displayedLabel, needed, [
                                    {label: trans('Général', null, 'Modale', 'Oui', false), value: '1', checked: entityValue == 1},
                                    {label: trans('Général', null, 'Modale', 'Non', false), value: '0', checked: entityValue is not null and entityValue == 0}
                                ], {
                                    additionalAttributes: [{
                                        name: 'data-title',
                                        value: label
                                    }]
                                }) }}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_NUMBER') %}
                                {{ form.input(freeField.id, displayedLabel, needed, entityValue, {
                                    type: 'number',
                                    additionalAttributes: [{
                                        name: 'data-init',
                                        value: entityValue
                                    }, {
                                        name: 'data-negative'
                                    }]
                                }) }}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_LIST') %}
                                {% set elements = freeField.elementsIn(language_service.getCurrentUserLanguageSlug, language_service.defaultSlug) %}
                                {% set selectedValue = entityValue|transFreeFieldElements(freeField) %}
                                {{ form.select(freeField.id, displayedLabel, needed, {
                                    items: elements|map((elem) => {value: elem, label: elem}),
                                    value: selectedValue,
                                    inputClass: 'needs-default w-100',
                                    emptyOption: {text: '', value: ''},
                                    additionalAttributes: [{
                                        name: 'data-init',
                                        value: selectedValue
                                    }],
                                }) }}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_LIST_MULTIPLE') %}
                                {% set elements = freeField.elementsIn(language_service.getCurrentUserLanguageSlug, language_service.defaultSlug) %}
                                {% set entityValuesArray = freeFieldValues[freeField.id] is defined
                                    ? freeFieldValues[freeField.id]|split(';')|transFreeFieldElements(freeField)
                                    : [] %}
                                {{ form.select(freeField.id, displayedLabel, needed, {
                                    items: elements|map((elem) => {value: elem, label: elem}),
                                    multiple: true,
                                    value: entityValuesArray,
                                    type: null,
                                    inputClass: 'list-multiple w-100',
                                    additionalAttributes: [{
                                        name: 'data-simple'
                                    }]
                                }) }}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_TEXT') %}
                                {{ form.input(freeField.id, label, needed, entityValue, {
                                    additionalAttributes: [{
                                        name: 'data-init',
                                        value: entityValue
                                    }]
                                }) }}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_DATETIME') %}
                                {% if needsDateFormatting is defined and needsDateFormatting %}
                                    {% set value = entityValue ? entityValue : '' %}
                                    <label class="w-100">
                                        {{ form.label(displayedLabel, needed, false, {}) }}
                                        <input type="text"
                                               value="{{ value }}"
                                               data-init="{{ value }}"
                                               class="form-control w-100 data free-field-datetime {{ needed ? 'needed' }} pointer"
                                               name="{{ freeField.id }}"
                                               placeholder="{{ app.user.displayedDateFormat ~ ' hh:mm' }}"
                                               autocomplete="off"/>
                                    </label>
                                {% else %}
                                    {% set value = entityValue ? ((entityValue | replace({'/': '-'}) ) | date('Y-m-d\\TH:i')) : '' %}
                                    {{ form.input(freeField.id, displayedLabel, needed, value, {
                                        type: 'datetime-local',
                                        additionalAttributes: [{
                                            name: 'data-init',
                                            value: value
                                        }]
                                    }) }}
                                {% endif %}
                            {% elseif freeField.typage == constant('App\\Entity\\FreeField::TYPE_DATE') %}
                                {% if needsDateFormatting is defined and needsDateFormatting %}
                                    {% set value = entityValue ? entityValue : '' %}
                                    <label class="w-100">
                                        {{ form.label(displayedLabel, needed, false, {}) }}
                                        <input type="text"
                                               value="{{ value }}"
                                               data-init="{{ value }}"
                                               class="form-control w-100 data free-field-date {{ needed ? 'needed' }} pointer"
                                               name="{{ freeField.id }}"
                                               placeholder="{{ app.user.displayedDateFormat }}"
                                               autocomplete="off"/>
                                    </label>
                                {% else %}
                                    {% if entityValue is defined and entityValue matches '{^\\d{2}/\\d{2}/\\d{4}$}' %}
                                        {% set entityValue = entityValue[6:4] ~ '-' ~ entityValue[3:2] ~ '-' ~ entityValue[:2] %}
                                    {% elseif entityValue is defined and entityValue matches '{^\\d{4}-\\d{2}-\\d{2}$}' %}
                                        {% set entityValue = entityValue | date('Y-m-d') %}
                                    {% else %}
                                        {% set entityValue = '' %}
                                    {% endif %}
                                    {{ form.input(freeField.id, displayedLabel, needed, entityValue, {
                                        type: 'date',
                                        additionalAttributes: [{
                                            name: 'data-init',
                                            value: entityValue
                                        }]
                                    }) }}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endfor %}
    </div>
{% endif %}
