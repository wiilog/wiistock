{% import "form.html.twig" as form %}

{% set kiosk = kiosk is defined ? kiosk : null %}
{% set typeField = constant('App\\Entity\\Fields\\FixedFieldEnum::type') %}
{% set objectField = constant('App\\Entity\\Fields\\FixedFieldEnum::object') %}
{% set pickingLocationField = constant('App\\Entity\\Fields\\FixedFieldEnum::pickingLocation') %}
{% set nameField = constant('App\\Entity\\Fields\\FixedFieldEnum::name') %}
{% set quantityToPickField = constant('App\\Entity\\Fields\\FixedFieldEnum::quantityToPick') %}
{% set requesterField = constant('App\\Entity\\Fields\\FixedFieldEnum::requester') %}
{% set destinationField = constant('App\\Entity\\Fields\\FixedFieldEnum::destination') %}

{% if kiosk %}
    {{ form.hidden('id', kiosk.id) }}
{% endif %}

<div class="wii-section">
    <div class="row">
        <div class="form-group col-6 col-lg-4">
            {{ form.select(typeField.name, typeField.value, true, {
                type: 'collectType',
                placeholder: 'Sélectionnez un type',
                search: true,
                value: kiosk ? kiosk.pickingType.id : null,
                items: kiosk ? {
                    0: {
                        'value': kiosk.pickingType.id,
                        'label':  kiosk.pickingType.label,
                        'selected': true
                    }
                } : null,
            }) }}
        </div>
        <div class="form-group col-6 col-lg-4">
            {{ form.input(objectField.name, objectField.value, true, kiosk.subject ?? null) }}
        </div>
        <div class="form-group col-6 col-lg-4">
            {{ form.select(pickingLocationField.name, pickingLocationField.value, true, {
                type: 'location',
                search: true,
                value: kiosk ? kiosk.pickingLocation.id : null,
                items: kiosk ? {
                    0: {
                        'value': kiosk.pickingLocation.id,
                        'label':  kiosk.pickingLocation.label,
                        'selected': true
                    }
                } : null,
            }) }}
        </div>
    </div>
    <div class="row">
        <div class="form-group col-6 col-lg-4">
            {{ form.input(nameField.name, nameField.value, false, kiosk.name ?? null) }}
        </div>
        <div class="form-group col-6 col-lg-4">
            {{ form.input(quantityToPickField.name, quantityToPickField.value, false, kiosk.quantityToPick ?? 1, {
                type: 'number',
                min: 1,
            }  ) }}
        </div>
        <div class="form-group col-6 col-lg-4">
            {{ form.select(requesterField.name, requesterField.value, true, {
                type: 'collectRequester',
                placeholder: 'Sélectionnez un utilisateur',
                search: true,
                type: 'user',
                value: kiosk ? kiosk.requester.id : null,
                items: kiosk ? {
                    0: {
                        'value': kiosk.requester.id,
                        'label':  kiosk.requester.username,
                        'selected': true
                    }
                } : null,
            }) }}
        </div>
    </div>
    <div class="row">
        <div class="form-group col-6 col-lg-4">
            {{ form.switch(destinationField.name, destinationField.value, true, [
                {
                    label: 'Mise en stock',
                    value: 'stock',
                    checked: kiosk ? (kiosk.destination == 'stock') : null
                },
                {
                    label: 'Destruction',
                    value: 'destruction',
                    checked: kiosk ? (kiosk.destination == 'destruction') : null
                },
            ]) }}
        </div>
    </div>
</div>

