<form method="" class="modal fade" data-modal-type="new" id="modalNewHandling" role="dialog" aria-labelledby="dataModalCenterTitle"
      aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">{{ 'services.Nouvelle demande de service'|trans }}</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body modal-input container-fluid">
                <div class="row">
                    <div class="form-group col-md-6 col-12">
                        <label for="type">Type*</label>
                        <select name="type" class="form-control data d-block type needed"
                                onchange="onTypeChange($(this))">
                            <option value="">Type à choisir...</option>
                            {% set typeIsUnique = freeFieldsTypes | length == 1 %}
                            {% for type in freeFieldsTypes |sort((a, b) => a.typeLabel <=> b.typeLabel) %}
                                <option value="{{ type.typeId }}" {{ typeIsUnique ? 'selected' }}>{{ type.typeLabel }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <div class="form-group col-md-6 col-12">
                        <label for="type">Statut*</label>
                        <select name="status" class="form-control data w-100 needed">
                            <option value="">Choisir un statut...</option>
                            {% for status in handlingStatus %}
                                {% if
                                    (
                                    status.state == constant('App\\Entity\\Statut::TREATED')
                                    and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::TREAT_HANDLING'))
                                    ) or status.state != constant('App\\Entity\\Statut::TREATED') %}
                                    <option class="d-none" data-type-id="{{ status.type.id }}" value="{{ status.id }}">{{ status.nom }}</option>
                                {% endif %}
                            {% endfor %}
                        </select>
                        <input type="hidden" name="defaultStatuses" value="{{ defaultStatuses|json_encode }}"/>
                        <div class="error-empty-status d-none">
                            {% include 'utils/warningSelectEmpty.html.twig' with {
                                array: [],
                                warningLabel: 'Aucun statut pour ce type',
                                redirectPath: path('settings_item', {
                                    'category': constant('App\\Controller\\Settings\\SettingsController::CATEGORY_TRACKING'),
                                    'menu': constant('App\\Controller\\Settings\\SettingsController::MENU_HANDLINGS'),
                                    'submenu': constant('App\\Controller\\Settings\\SettingsController::MENU_STATUSES'),
                                }),
                                redirectLabel: 'Aller vers la création des statuts'
                            } %}
                        </div>
                    </div>

                    <div class="form-group needed col-md-6 col-12">
                        <label for="subject">{{ 'services.Objet'|trans }}*</label>
                        <input class="form-control data needed" name="subject">
                    </div>

                    <div class="form-group col-md-6 col-12">
                        <label for="requester">Demandeur</label>
                        <select class="demandeur form-control data needed" name="requester" disabled>
                            <option value="{{ app.user.id }}">{{ app.user.username }}</option>
                        </select>
                    </div>

                    {% set removeHourInDatetime = removeHourInDatetime is defined and removeHourInDatetime %}
                    <div class="form-group col-12">
                        <label for="desired-date">Date attendue*</label>
                        <input type="{{ removeHourInDatetime ? 'date' : 'datetime-local' }}"
                               class="form-control data needed"
                               name="desired-date"
                               title="Date attendue"
                               placeholder="jj/mm/aaaa"
                               min="{{ 'now' | date(removeHourInDatetime ? 'Y-m-d' : 'Y-m-d\\TH:i') }}"/>
                    </div>

                    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_EMERGENCY') %}
                    {% if fieldsParam|isFieldRequired(fieldCode, 'displayedCreate') %}
                        {% set required = fieldsParam|isFieldRequired(fieldCode, 'requiredEdit') %}
                        <div class="form-group col-12">
                            <label>Urgence{{ required ? '*' }}</label>
                            <div class="w-100">
                                <select
                                    class="form-control input-sm data {{ required ? 'needed' : '' }}"
                                    name="emergency">
                                    <option value="">Non urgent</option>
                                    {% for emergency in emergencies %}
                                        <option value="{{ emergency }}">{{ emergency }}</option>
                                    {% endfor %}
                                </select>
                            </div>
                        </div>
                    {% endif %}

                    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_LOADING_ZONE') %}
                    {% if fieldsParam|isFieldRequired(fieldCode, 'displayedCreate') %}
                        <div class="form-group col-md-6 col-12">
                            <label for="source">Chargement{{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? '*' : '' }}</label>
                            <input class="form-control data {{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? 'needed' : '' }}" name="source">
                        </div>
                    {% endif %}

                    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_UNLOADING_ZONE') %}
                    {% if fieldsParam|isFieldRequired(fieldCode, 'displayedCreate') %}
                        <div class="form-group col-md-6 col-12">
                            <label for="destination">Déchargement{{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? '*' : '' }}</label>
                            <input class="form-control data {{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? 'needed' : '' }}" name="destination">
                        </div>
                    {% endif %}

                    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CARRIED_OUT_OPERATION_COUNT') %}
                    {% if fieldsParam|isFieldRequired(fieldCode, 'displayedCreate') %}
                        <div class="form-group col-md-6 col-12">
                            <label for="carriedOutOperationCount">{{ 'services.Nombre d\'opération(s) réalisée(s)'|trans }}{{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? '*' }}</label>
                            <input type="number"
                                   min="0"
                                   class="form-control data {{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? 'needed' }}"
                                   name="carriedOutOperationCount">
                        </div>
                    {% endif %}
                    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_RECEIVERS_HANDLING') %}
                    {% if fieldsParam|isFieldRequired(fieldCode, 'displayedCreate') %}
                        <div class="form-group col-md-6 col-12">
                            <label>Destinataires{{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? '*' }}</label>
                            <select name="receivers"
                                    class="form-control data ajax-autocomplete-user receivers w-100 {{ fieldsParam|isFieldRequired(fieldCode, 'requiredCreate') ? 'needed' }}"
                                    multiple>
                            </select>
                        </div>
                    {% endif %}

                    <!-- CHAMPS LIBRES -->
                    <div class="col-12">
                        <span class="toggle-collapsible expanded">Champs libres</span>
                        <div class="collapsible expanded free-fields-container mb-2">
                            {% for type in freeFieldsTypes %}
                                <div class="d-none"
                                     data-type="{{ type.typeId }}">
                                    {% include 'free_field/freeFieldsEdit.html.twig' with {
                                        freeFields: type.freeFields,
                                        freeFieldValues: [],
                                        colType: 'col-md-6 col-12',
                                        requiredType: 'requiredCreate',
                                        actionType: 'new',
                                        disabledNeeded: true
                                    } %}
                                </div>
                            {% endfor %}
                        </div>
                    </div>

                    <div class="form-group col-md-8 col-12">
                        <label for="comment">Commentaire</label>
                        <input class="commentaire form-control data" name="comment" type="hidden" id="commentaire">
                        <div class="editor-container-new" data-wysiwyg>
                        </div>
                    </div>
                    <div class="form-group col-md-4 col-12">
                        {% include 'attachment/attachment.html.twig' with {
                            'isNew' : true
                        } %}
                    </div>
                </div>
            </div>

            <div class="error-msg"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Annuler</button>
                <button id="submitNewHandling" type="button" class="btn btn-success">Enregistrer</button>
            </div>
        </div>
    </div>
</form>
