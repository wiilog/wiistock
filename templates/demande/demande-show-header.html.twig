{% extends 'utils/show-header.html.twig' %}

{% block showTitle (trans('Demande', 'Livraison', 'Demande de livraison', false)) %}
{% block showSubtitle ('n°' ~ demande.numero) %}

{% block showActions %}

    {% set receiver = demande.receiver ? demande.receiver.username %}
    <input hidden name="DELIVERY_REQUEST_REF_COMMENT_WITH_PROJECT" value="{{ setting_value(constant('App\\Entity\\Setting::DELIVERY_REQUEST_REF_COMMENT_WITH_PROJECT'))|replace({'@Destinataire': receiver}) }}">
    <input hidden name="DELIVERY_REQUEST_REF_COMMENT_WITHOUT_PROJECT" value="{{ setting_value(constant('App\\Entity\\Setting::DELIVERY_REQUEST_REF_COMMENT_WITHOUT_PROJECT'))|replace({'@Destinataire': receiver}) }}">

    {% set associatedReception = (demande.reception is defined and demande.reception) ? demande.reception : null %}

    {% include 'utils/action-buttons/header-buttons.html.twig' with {
        forceActionButton: true,
        actions: [
            {
                hasRight: modifiable and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::CREATE')),
                buttonClass: "btn btn-primary",
                icon: "wii-icon wii-icon-check-white",
                title: "Valider",
                attributes: {
                    "data-id": demande.id,
                    "onclick": "validateLivraison(" ~ demande.id ~ ", $(this))"
                }
            },
            {
                hasRight: associatedReception and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_RECE')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-external-link-alt",
                title: "Aller vers la réception",
                dropdownOnly: true,
                href: associatedReception ? path('reception_show', {'id': associatedReception.id  }),
            },
            {
                hasRight: demande.preparations|length > 1 and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_PREPA')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-external-link-alt",
                title: "Aller vers les ordres de préparations",
                dropdownOnly: true,
                href: path('preparation_index', {'deliveryRequest': demande.id }),
            },
            {
                hasRight: demande.preparations|length == 1 and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_PREPA')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-external-link-alt",
                title: "Aller vers l'ordre de préparation",
                dropdownOnly: true,
                href: demande.preparations is not empty ? path('preparation_show', {'id': demande.preparations[0].id }),
            },
            {
                hasRight: demande.livraisons|length > 1 and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_ORDRE_LIVR')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-external-link-alt",
                title: "Aller vers les " ~ trans('Ordre', 'Livraison', 'Ordre de livraison', false) | lower,
                dropdownOnly: true,
                href: path('livraison_index', {'demandId': demande.id }),
            },
            {
                hasRight: demande.livraisons|length == 1 and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_ORDRE_LIVR')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-external-link-alt",
                title: "Aller vers l'" ~ trans('Ordre', 'Livraison', 'Ordre de livraison', false) | lower,
                dropdownOnly: true,
                href: demande.livraisons is not empty ? path('livraison_show', {'id': demande.livraisons[0].id }),
            },
            {
                hasRight: (
                    (demande.preparations|filter(p => p.pairings|length > 0)|length >= 1)
                    and hasRight(constant('App\\Entity\\Menu::IOT'), constant('App\\Entity\\Action::DISPLAY_SENSOR'))
                ),
                buttonClass: "btn btn-primary",
                icon: "wii-icon wii-icon-pairing",
                title: "Historique des données",
                dropdownOnly: true,
                href: path('show_data_history', {id: demande.id, type: constant('App\\Entity\\IOT\\Sensor::DELIVERY_REQUEST')}),
            },
            {
                hasRight: modifiable and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::EDIT')),
                buttonClass: "btn btn-primary",
                icon: "fas fa-pencil-alt",
                title: "Modifier",
                class: 'edit-button',
                dropdownOnly: true,
                attributes: {
                    onclick: "editRow(
                        $(this),
                        Routing.generate('demandeLivraison_api_edit', true),
                        $('#modalEditDemande'),
                        $('#submitEditdemande'), false,
                        () => initDeliveryRequestModal()
                    );",
                    "data-id": demande.id,
                    "data-target": "#modalEditDemande",
                    "data-toggle": "modal",
                },
            },
            {
                hasRight: modifiable and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DELETE')),
                buttonClass: "btn btn-primary",
                icon: "wii-icon wii-icon-trash-black",
                title: "Supprimer",
                dropdownOnly: true,
                attributes: {
                    "data-id": demande.id,
                    "data-target": "#modalDeleteDemande",
                    "data-toggle": "modal",
                },
            },
        ]
    } %}
{% endblock %}
