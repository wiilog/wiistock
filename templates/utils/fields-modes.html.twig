{#
    usage example:
    {% include "utils/fields-modes.html.twig" with {
        fields,
        reload: true,
        page: constant('App\\Controller\\PATH_TO_CONTROLLER::PAGE'),
        config: {
            title: 'Gestion des champs affichés',
            columns: [
                {
                    type: "switch",
                    items: [
                        {
                            label: "masqué",
                            value: "",
                            default: true,
                        },
                        {
                            label: "visible",
                            value: constant('App\\Service\\FieldModesService::FIELD_MODE_VISIBLE'),
                        },
                        {
                            label: "visible en dépliant",
                            value: constant('App\\Service\\FieldModesService::FIELD_MODE_VISIBLE_IN_DROPDOWN'),
                        },

                    ],
                },
                {
                    label: "Visible",
                    type: "checkbox",
                    name: constant('App\\Service\\FieldModesService::FIELD_MODE_VISIBLE'),
                },
            ],
        }
    } %}
#}

{% import 'form.html.twig' as form %}


{% set tableConfigLabels = [] %}
{% set fields = fields|sort((a,b) => (a.displayedTitle ?? a.title) | capitalize <=> (b.displayedTitle ?? b.title) | capitalize)  %}
{% for column in config.columns %}
    {% set tableConfigLabels = tableConfigLabels|merge([column.label ?? ""]) %}
{%  endfor %}




<div class="modal fade" id="modalFieldModes" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            {% include 'utils/modal/header.html.twig' with {
                title: config.title ?? trans('Général', null, 'Zone liste', 'Gestion des colonnes'),
            } %}

            <div class="modal-body">
                {{ otherFields is defined ? otherFields|raw }}
                <table class="table" style="width:100%">
                    <thead>
                    <tr>
                        <th></th>
                        {% for label in tableConfigLabels ?? [] %}
                            <th>{{ label }}</th>
                        {% endfor %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for field in fields %}
                        {% set displayfield = (field.alwaysVisible is not defined or not field.alwaysVisible)
                            and (field.hiddenColumn is not defined or not field.hiddenColumn) %}
                        {% if displayfield %}
                            <tr class="pointer"
                                data-field-name="{{ field.data }}">
                                {% set title = (
                                    (field.title is defined and field.title is not empty) ? field.title :
                                    ((field.hiddenTitle is defined and field.hiddenTitle is not empty) ? field.hiddenTitle)
                                    ) %}

                                {% set fieldLabel = ((field.displayedTitle is defined)
                                    ? field.displayedTitle
                                    : title) %}

                                <td>
                                    {{ fieldLabel | raw }}
                                </td>

                                {% set fieldCount = loop.index0 %}
                                {% for column in config.columns %}
                                <td>
                                    {% if column.type == "checkbox" %}
                                        {% set name = column.name %}
                                        <div class="wii-checkbox d-inline-block pointer no-data" style="pointer-events: none;">
                                            {% set checked = field[name] is defined and field[name] %}
                                            {{ form.checkbox('name', null, false, checked, {
                                                additionalAttributes : [
                                                    {
                                                        name: 'data-column',
                                                        value : field.data,
                                                    },
                                                    {
                                                        name: 'data-name',
                                                        value : name,
                                                    }
                                                ]
                                            } ) }}
                                        </div>
                                    {% elseif (column.type == "switch") %}
                                        {% set name = column.items|map((item) => item.value)|join('_') ~ fieldCount %}

                                        {% set items = column.items|map((item) => {
                                            label: item.label,
                                            value: item.value,
                                            checked: field[item.value] is defined and field[item.value],
                                            default: item.default ?? false,
                                        }) %}

                                        {% if not items|filter((item) => item.checked) | length %}
                                            {% set defaultItem = items|filter((item) => item.default) %}
                                            {% if defaultItem|length %}
                                                {% set items = items|map((item) => {
                                                    label: item.label,
                                                    value: item.value,
                                                    checked: item.value == defaultItem[0].value,
                                                    default: item.default ?? false,
                                                }) %}
                                            {% endif %}
                                        {% endif %}

                                        {{ form.switch(name, null, false, items) }}
                                    {% endif %}
                                </td>
                                {% endfor %}
                            </tr>
                        {% endif %}
                    {% endfor %}
                    </tbody>
                </table>

                {{ form.hidden("tables", table ?? "", {data: false}) }}
                {{ form.hidden("reload", reload is defined and reload == "1", {data: false}) }}
                {{ form.hidden("page", page, {data: false}) }}
            </div>
            {% include 'utils/modal/footer.html.twig' with {
                elements: [
                    {classes: 'btn btn-outline-secondary', dismiss: true, text: trans('Général', null, 'Modale', 'Fermer')},
                    {classes: 'btn btn-success', text: trans('Général', null, 'Modale', 'Enregistrer'), type: "submit"}
                ],
                hideErrorContainer: true,
            } %}
        </div>
    </div>
</div>
