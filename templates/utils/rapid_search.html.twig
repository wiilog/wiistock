{% set fieldsSearch = fields|filter(f => f.searchable is defined and f.searchable) %}
<div class="modal fade" id="modalRapidSearch" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            {% include 'utils/modal/header.html.twig' with {
                title: "Modifier la recherche rapide"
            } %}

            <div class="modal-body">
                {% if hints is defined and hints %}
                    <span class="wii-small-text">La recherche multi-critères fonctionne de la manière suivante :</span>
                    <ul>
                        <li class="wii-small-text ml-3">- Le séparateur est l'espace</li>
                        <li class="wii-small-text ml-3">- Le poids des termes recherchés dépend de leur position</li>
                        <li class="wii-small-text ml-3">- Le poids de la colonne "Libellé" est 5x plus important que les autres</li>
                        <li class="wii-small-text ml-3">- Le minimum de caractères requis pour la recherche est de {{ constant("App\\Helper\\AdvancedSearchHelper::MIN_SEARCH_PART_LENGTH") }}</li>
                    </ul>
                {% endif %}

                <div class="wii-section-title mt-3">Champs à rechercher</div>
                <table class="table float-left w-49">
                    <thead>
                    <tr>
                        <th>Champs</th>
                        <th class="text-center">Actions</th>
                    </tr>
                    </thead>
                    {% set orderedFields = fieldsSearch|sort((a,b) => (
                        ((a.displayedTitle is defined) ? a.displayedTitle : a.title)
                        <=> ((b.displayedTitle is defined) ? b.displayedTitle : b.title)
                    )) %}
                    {% for field in orderedFields %}
                        {% if field.name != 'actions' %}
                            {% set label = ((field.displayedTitle is defined)
                                ? field.displayedTitle
                                : field.title) %}
                            {% set title = (
                                (field.title is defined and field.title is not empty) ? field.title :
                                ((field.hiddenTitle is defined and field.hiddenTitle is not empty) ? field.hiddenTitle)
                            ) %}
                            <tr class="toggle-search pointer">
                                <td>{{ label }}</td>
                                <td>
                                    <div class="form-check d-flex align-items-center justify-content-center">
                                        <input type="checkbox" class="form-check-input"
                                               name="{{ field.name }}" {{ field.name in searches ? 'checked' }}
                                               title="{{ label }}">
                                    </div>
                                </td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                </table>
                <table class="table float-right w-49" id="rapid-search">
                    <thead>
                    <tr>
                        <th>Recherche rapide</th>
                    </tr>
                    </thead>
                    {% for search in searches %}
                        {% set field = fieldsSearch | filter(f => f.name == search) | first %}
                        {% if field %}
                            {% set label = ((field.displayedTitle is defined)
                                ? field.displayedTitle
                                : field.title)
                            %}
                            <tr>
                                <td data-name="{{ search }}">{{ label }}</td>
                            </tr>
                        {% endif %}
                    {% endfor %}
                </table>
            </div>
            {% include 'utils/modal/footer.html.twig' with {
                elements: [
                    {classes: 'btn btn-outline-secondary', dismiss: true, text: 'Fermer'},
                    {classes: 'btn btn-success', text: 'Enregistrer', id: 'submit-rapid-search'}
                ],
                hideErrorContainer: true,
            } %}

        </div>
    </div>
</div>

<script>
    window.addEventListener("load", function () {
        $(".toggle-search").click((event) => {
            const target = $(event.target);
            let checkbox;

            if (!target.is("input")) {
                checkbox = $(event.currentTarget).find('input[type="checkbox"]');
                checkbox.prop("checked", !checkbox.is(":checked"));
            } else {
                checkbox = target;
            }

            addToRapidSearch(checkbox);
        });

        $("#submit-rapid-search").click(saveRapidSearch);
    });

    function addToRapidSearch(checkbox) {
        const checked = checkbox.prop("checked");
        const title = checkbox.attr("title");
        const name = checkbox.attr("name");

        if (checked) {
            $('#rapid-search').append(`<tr><td data-name="${name}">${title}</td></tr>`);
        } else {
            $('#rapid-search td')
                .filter((_, e) => e.dataset.name === name)
                .each((_, e) => e.parentNode.remove());
        }
    }

    function saveRapidSearch() {
        const $button = $(this);
        const $modal = $button.closest('.modal');

        const table = {{ table }};
        const searches = $('#rapid-search td')
            .map((_, e) => e.dataset.name)
            .get();

        wrapLoadingOnActionButton($button, () => {
            return $.ajax({
                url: Routing.generate('{{ route }}', true),
                type: "POST",
                dataType: "json",
                data: {searches},
                success: function (res) {
                    if (res) {
                        const color = res.success ? 'success' : 'danger';
                        const message = res.msg;
                        if (message) {
                            showBSAlert(message, color);
                        }
                        if (res.success) {
                            $modal.modal("hide");
                            table.search(table.search()).draw();
                        }
                    }
                }
            });
        });
    }
</script>
