{% import 'form.html.twig' as form %}

{% set displayAction = dispatch.id ? 'displayedEdit' : 'displayedCreate' %}
{% set requiredAction = dispatch.id ? 'requiredEdit' : 'requiredCreate' %}

{% if dispatch.id %}
    {{ form.hidden('id', dispatch.id) }}
{% endif %}

<div class="row">
    <div class="col-md-4 col-12">
        {% set uniqueType = typeChampsLibres is defined and typeChampsLibres|length == 1 %}
        {{ form.select(constant('App\\Entity\\FieldsParam::FIELD_CODE_TYPE_DISPATCH'), trans('Demande', 'Général', 'Type', false), true, {
            disabled: dispatch.id,
            additionalAttributes: dispatch.id ? [] :[
                { name: 'onChange', value: 'onDispatchTypeChange($(this))' },
            ],
            items: dispatch.id and dispatch.type ? [{
                value: dispatch.type.id,
                label:  dispatch.type|format_helper('type'),
                selected: true,
            }] : typeChampsLibres|map(type => ({
                value: type.typeId,
                label: type.typeLabel,
                selected: uniqueType,
                'pick-location-id': type.pickLocation.id,
                'pick-location-label': type.pickLocation.label,
                'drop-location-id': type.dropLocation.id,
                'drop-location-label': type.dropLocation.label,
                'suggested-drop-locations': type.suggestedDropLocations,
                'suggested-pick-locations': type.suggestedDropLocations,
            })),
        }) }}
    </div>
    <div class="col-md-4 col-12 form-item">
        {{ form.select(constant('App\\Entity\\FieldsParam::FIELD_CODE_STATUS_DISPATCH'), trans('Demande', 'Général', 'Statut', false), true, {
            disabled: dispatch.id,
            items: dispatch.id and dispatch.statut ? [{
                value:  dispatch.statut.id,
                label:  dispatch.statut|format_helper('status'),
                selected: true,
            }] : notTreatedStatus|map(status => ({
                value: status.id,
                label: status|format_helper('status'),
                'type-id': status.type.id,
            }))
        }) }}
        <div class="error-empty-status d-none">
            {% include 'utils/warningSelectEmpty.html.twig' with {
                array: [],
                warningLabel: trans('Demande', 'Général', 'Aucun statut brouillon pour ce type'),
                redirectPath: path('settings_item', {
                    'category': constant('App\\Controller\\Settings\\SettingsController::CATEGORY_TRACING'),
                    'menu': constant('App\\Controller\\Settings\\SettingsController::MENU_DISPATCHES'),
                    'submenu': constant('App\\Controller\\Settings\\SettingsController::MENU_STATUSES'),
                }),
                redirectLabel: trans('Demande', 'Général', 'Aller vers la création des statuts'),
                block: true,
                rights: {
                    menu: constant('App\\Entity\\Menu::PARAM'),
                    action: constant('App\\Entity\\Action::CREATE')
                }
            } %}
        </div>
    </div>


    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_REQUESTER_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requester = dispatch.requester ?? app.user %}
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.select(fieldCode, trans('Demande', 'Général', 'Demandeur', false), requiredOnform, {
                type: 'user',
                inputClass: 'no-clear',
                items: [{
                    value: requester.id,
                    label: requester.username,
                    selected: true,
                }]
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_LOCATION_PICK') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {{ form.hidden('typeDispatchPickLocation', dispatch.type.id ?? null) }}
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.select(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Emplacement de prise'), requiredOnform, {
                type: 'location',
                items: dispatch.locationFrom ? [{
                    value: dispatch.locationFrom.id,
                    label: dispatch.locationFrom.label,
                    selected: true,
                }] : [],
                additionalAttributes: [
                    { name: 'data-include-params', value: 'input[name=typeDispatchPickLocation]' },
                ],
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_LOCATION_DROP') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {{ form.hidden('typeDispatchDropLocation', dispatch.type.id ?? null ) }}
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.select(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Emplacement de dépose'), requiredOnform, {
                type: 'location',
                items: dispatch.locationTo ? [{
                    value: dispatch.locationTo.id,
                    label: dispatch.locationTo.label,
                    selected: true,
                }] : [],
                additionalAttributes: [
                    { name: 'data-include-params', value: 'input[name=typeDispatchDropLocation]' },
                ],
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_DESTINATION') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.input(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Destination'), requiredOnform, dispatch.destination, {
                additionalAttributes: [
                    { name: 'maxlength', value: 50},
                ]
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_EMERGENCY') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set dispatchEmergency = dispatch.emergency %}
            {{ form.select(fieldCode, trans('Demande', 'Général', 'Urgence', false), false, {
                items: emergencies|map(item => ({
                    value: item,
                    label: item,
                    selected: dispatchEmergency == item,
                })),
                emptyOption: {
                    selected: not dispatchEmergency,
                    label: trans('Demande', 'Acheminements', 'Modale', 'Non urgent', false)
                }
            }) }}
        </div>
    {% endif %}

    {% if hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::SHOW_CARRIER_FIELD')) %}
        {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CARRIER_DISPATCH') %}
        {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
        {% if displayOnform %}
            <div class="form-group col-md-4 col-12">
                {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
                {{ form.select(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Transporteur', false), requiredOnform, {
                    type: 'carrier',
                    items: dispatch.carrier ? [{
                        value: dispatch.carrier.id,
                        label: dispatch.carrier.label,
                        selected: true,
                    }] : [],
                }) }}
            </div>
        {% endif %}
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CARRIER_TRACKING_NUMBER_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.input(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'N° tracking transporteur'), requiredOnform, dispatch.carrierTrackingNumber) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_RECEIVER_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.select(fieldCode, trans('Demande', 'Général', 'Destinataire(s)', false), requiredOnform, {
                type: 'user',
                multiple: true,
                items: dispatch.receivers|map((item) => {
                    value: item.id,
                    label: item.username,
                    selected: true,
                }),
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_COMMAND_NUMBER_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.input(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'N° commande'), requiredOnform, dispatch.commandNumber) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_PROJECT_NUMBER') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {% set projectNumber = dispatch.id is defined ? dispatch.projectNumber : (arrival is defined ? arrival.projectNumber : null) %}
            {{ form.input(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'N° projet'), requiredOnform, projectNumber, {
                additionalAttributes: dispatch.id ? [] : [
                    { name: 'data-init', value: projectNumber },
                ],
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_BUSINESS_UNIT') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {% set dispatchBusinessUnit = dispatch.businessUnit %}
            {{ form.select(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Business unit', false), requiredOnform, {
                items: dispatchBusinessUnits|map((businessUnit) => {
                    value: businessUnit,
                    label: businessUnit,
                    selected: dispatchBusinessUnit == businessUnit
                }),
                emptyOption: {
                    selected: not dispatchBusinessUnit,
                    label: ""
                }
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_EMAILS') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.select(fieldCode, 'Email(s)', requiredOnform, {
                multiple: true,
                type: '',
                editable: true,
                items: dispatch.emails|map((emails) => {
                    value: emails,
                    label: emails,
                    selected: true,
                }),
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_DEADLINE_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
        <div class="form-group col-md-8 col-12">
            {{ form.inlineInputs(fieldCode, trans('Demande', 'Acheminements', 'Modale', 'Echéance', false), requiredOnform,{
                content: [
                    {
                        label: 'Du',
                        name: constant('App\\Entity\\FieldsParam::FIELD_CODE_START_DATE_DISPATCH'),
                        value: dispatch.startDate ? dispatch.startDate|date('Y-m-d') : null,
                        type: 'date',
                        autocompleteOff: true,
                        width: '',
                        additionalAttributes: [{
                        name: 'title',
                        value: 'Date d\'échéance min'
                    }]
                    },
                    {
                        label: 'Au',
                        name: constant('App\\Entity\\FieldsParam::FIELD_CODE_END_DATE_DISPATCH'),
                        value: dispatch.endDate ? dispatch.endDate|date('Y-m-d') : null,
                        type: 'date',
                        autocompleteOff: true,
                        width: '',
                        additionalAttributes: [{
                        name: 'title',
                        value: 'Date d\'échéance max'
                    }]
                    },
                ],
            }) }}
        </div>
    {% endif %}
</div>
<div class="row">
    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CUSTOMER_NAME_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {% set dispatchBusinessUnit = dispatch.businessUnit %}
            {{ form.select(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Client', false), requiredOnform, {
                type: 'customers',
                items: [{
                    label: dispatch.customerName,
                    value: dispatch.customerName,
                    selected: true
                }],
                labelOptions: {
                    class: 'm-0',
                },
            }) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CUSTOMER_PHONE_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.input(fieldCode, trans('Demande', 'Acheminements', 'Champs fixes', 'Téléphone client'), requiredOnform, dispatch.customerPhone) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CUSTOMER_RECIPIENT_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-4 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.input('customerRecipient', trans('Demande', 'Acheminements', 'Champs fixes', 'À l\'attention de'), requiredOnform, dispatch.customerRecipient) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_CUSTOMER_ADDRESS_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col-md-8 col-12">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.textarea('customerAddress', trans('Demande', 'Acheminements', 'Champs fixes', 'Adresse de livraison'), requiredOnform, dispatch.customerAddress) }}
        </div>
    {% endif %}

    <!-- CHAMPS LIBRES -->
    {% set typeChampsLibres = typeChampsLibres ?? (dispatch.type ? [{
        typeId: dispatch.type.id,
        champsLibres: dispatch.type.champsLibres,
    }] : []) %}
    <div class="col-12">
        <span class="toggle-collapsible expanded">{{ trans('Général', null, 'Modale', 'Champs libres') }}</span>
        <div class="collapsible expanded free-fields-container mb-2">
            {% for type in typeChampsLibres %}
                <div class="{{ typeChampsLibres|length > 1 ? ' d-none' }}"
                     data-type="{{ type.typeId }}">
                    {% include 'free_field/freeFieldsEdit.html.twig' with {
                        freeFields: type.champsLibres,
                        freeFieldValues: [],
                        colType: 'col-md-4 col-12',
                        requiredType: 'requiredCreate',
                        actionType: 'new',
                        disabledNeeded: false,
                        needsDateFormatting: true
                    } %}
                </div>
            {% endfor %}
        </div>
    </div>

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_COMMENT_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        <div class="form-group col">
            {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
            {{ form.wysiwyg(fieldCode, trans('Général', null, 'Modale', 'Commentaire'), requiredOnform, dispatch.commentaire) }}
        </div>
    {% endif %}

    {% set fieldCode = constant('App\\Entity\\FieldsParam::FIELD_CODE_ATTACHMENTS_DISPATCH') %}
    {% set displayOnform = fieldsParam|isFieldRequired(fieldCode, displayAction) %}
    {% if displayOnform %}
        {% set requiredOnform = fieldsParam|isFieldRequired(fieldCode, requiredAction) %}
        <div class="form-group col-md-4 col-12">
            {% include 'attachment/attachment.html.twig' with {
                isNew: dispatch.id is null,
                required: requiredOnform,
                override: true,
            } %}
        </div>
    {% else %}
        {{ form.hidden('isAttachmentForm', 1) }}
    {% endif %}
</div>
