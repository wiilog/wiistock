{% extends 'utils/show-header.html.twig' %}

{% block showTitle ('Préparation') %}
{% block showSubtitle ('n°' ~ preparation.numero) %}

{% block showActions %}
    {% set hasRightPairingOrder = hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::PAIR_SENSOR')) %}
    {% set hasRightFinish = hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::EDIT')) %}

    {% include 'utils/action-buttons/header-buttons.html.twig' with {
        forceActionButton: true,
        actions: [
            {
                hasRight: isPrepaEditable and hasRightFinish and preparation.statut.code != constant('App\\Entity\\PreparationOrder\\Preparation::STATUT_VALIDATED'),
                icon: "wii-icon wii-icon-check-white",
                title: "Finir la préparation",
                attributes: {
                    "onclick": "finishPrepa($(this))",
                },
            },
            {
                hasRight: isPrepaEditable and hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DELETE')),
                buttonClass:  preparation.activePairing ? "disabled",
                icon: "wii-icon wii-icon-trash-black",
                title: "Supprimer",
                dropdownOnly: true,
                attributes: preparation.activePairing
                    ? {
                        "disabled": true,
                        "style": "pointer-events: initial",
                        "title": "La livraison est associée à un capteur, il faut d'abord la dissocier de son capteur",
                    }
                    : {
                        "data-target": "#modalDeletePreparation",
                        "data-toggle": "modal",
                    },
            },
            {
                hasRight: preparation.referenceLines | length > 0 or preparation.articleLines | length > 0,
                icon: "wii-icon wii-icon-printer-black",
                title: "Imprimer les étiquettes",
                attributes: {
                    "onclick": "printArticles(" ~ preparation.id ~ ")",
                },
                dropdownOnly: true,
            },
            {
                hasRight: (
                    hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::EDIT_PREPARATION_DATE'))
                    and preparation.expectedAt
                    and preparation.demande.expectedAt
                    and preparation.statut.code == constant('App\\Entity\\PreparationOrder\\Preparation::STATUT_VALIDATED')
                ),
                icon: "fa fa-edit",
                title: "Modifier",
                dropdownOnly: true,
                attributes: {
                    "data-target": '#modalEditPreparation',
                    "data-toggle": 'modal',
                },
            },
            {
                hasRight: hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_DEM_LIVR')) and demande,
                icon: "fas fa-external-link-alt",
                title: "Retourner à la demande de livraison",
                dropdownOnly: true,
                href: demande ? path('demande_show', {'id': demande.id}),
            },
            {
                hasRight: hasRight(constant('App\\Entity\\Menu::ORDRE'), constant('App\\Entity\\Action::DISPLAY_ORDRE_LIVR')) and livraison is not empty,
                icon: "fas fa-external-link-alt",
                title: "Aller vers l'ordre de livraison",
                dropdownOnly: true,
                href: livraison ? path('livraison_show', {'id': livraison.id}),
            },
            {
                hasRight: hasRightPairingOrder and hasRightFinish and not preparation.activePairing,
                icon: "wii-icon wii-icon-pairing",
                title: "Associer à un capteur",
                dropdownOnly: true,
                attributes: {
                    "data-target": "#modalNewSensorPairing",
                    "data-toggle": "modal",
                },
            },
            {
                hasRight: (preparation.pairings is not empty) and hasRight(constant('App\\Entity\\Menu::IOT'), constant('App\\Entity\\Action::DISPLAY_SENSOR')),
                icon: "wii-icon wii-icon-pairing",
                title: "Historique des données",
                dropdownOnly: true,
                href: preparation ? path('show_data_history', {id: preparation.demande.id, type: constant('App\\Entity\\IOT\\Sensor::DELIVERY_REQUEST')}),
            },
        ]
    } %}
{% endblock %}
