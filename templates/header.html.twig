{% import 'form.html.twig' as form %}

{% set isDashboardExt = isDashboardExt is defined and isDashboardExt %}
{% set withOnlyLogo = withOnlyLogo is defined and withOnlyLogo %}
{% set titleExists = title is defined and title is not empty %}
{% set tooltipExists = title_tooltip is defined and title_tooltip is not empty %}
{% set subtitleExists = subtitle is defined and subtitle is not empty %}
{% set titleLink = titleLink is defined ? titleLink : '' %}
{% set dateFormat = language_service.getDateFormats %}
{% set defaultLangage = language_service.defaultLanguage %}

<div class="main-header">
    <div class="px-lg-3 w-100">
        <div class="row align-items-center {{ withOnlyLogo ? 'justify-content-center' }}">
            <div class="col-12 col-lg-auto d-flex align-items-end justify-content-center">
                <a class="position-relative" href="{{ path('app_index') }}">
                    <img src="{{ logo('website') }}" alt="Follow GT" height="100" class="sizeLogo"/>
                </a>
                <span class="web-version d-none d-lg-inline">{{ web_version }}</span>
            </div>

            {% if not withOnlyLogo %}
                {% if isDashboardExt or titleExists or subtitleExists %}
                    <div class="col-12 col-lg user-select-none">
                        <div class="row align-items-center justify-content-lg-start justify-content-center">
                            {% if isDashboardExt or titleExists %}
                                <div class="col-auto py-2">
                                    <h5 class="header-title text-white h5 my-0 page-title" {% if tooltipExists %}title="{{ title_tooltip }}"{% endif %}>
                                        {% if titleExists %}
                                            {% set titleSplit = title|split('|') %}
                                            {% if titleSplit is not empty %}
                                                {% if titleLink is not empty %}<a href="{{ titleLink }}" class="header-title-link"><span>{% endif %}
                                                {% for titlePart in titleSplit[:(titleSplit|length - 1)] %}
                                                    {{ (titlePart | trim) | raw }}
                                                    {{ not loop.last ? '|' }}
                                                {% endfor %}
                                                {% if titleLink is not empty %}</span></a>{% endif %}
                                                {% if titleSplit|length > 1 %}<span>|</span>{% endif %}
                                                <span class="bold">{{ ((titleSplit | last) | trim) | raw }}</span>
                                            {% endif %}
                                        {% endif %}
                                    </h5>
                                </div>
                            {% endif %}
                            {% if subtitleExists %}
                                <div class="subtitle-container col">
                                    {{ subtitle|raw }}
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endif %}

                {% if not isDashboardExt and app.user %}
                    {% set hasDeliveryRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_DEM_LIVR'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        ) %}
                    {% set hasCollectRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_DEM_COLL'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        ) %}
                    {% set hasHandlingRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_HAND'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        ) %}
                    {% set hasDispatchRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_ACHE'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE_ACHE'))
                        ) %}
                    {% set hasTransferRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_TRANSFER_REQ'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        ) %}
                    {% set hasTransportRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::DISPLAY_TRANSPORT'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE_TRANSPORT'))
                        ) %}
                    {% set hasPurchaseRequestRights = (
                        hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE'))
                        and hasRight(constant('App\\Entity\\Menu::DEM'), constant('App\\Entity\\Action::CREATE_PURCHASE_REQUESTS'))
                        ) %}
                    <div class="col-auto pr-0 mr-0">
                        <a class="header-icon cart" href="{{ path('cart') }}">
                            {% set referencesQuantity = app.user.cart.references|length %}
                            {% set articlesQuantity = app.user.cart.articles|length %}
                            {% set logisticUnitsQuantity = app.user.cart.articles|map(article => article.currentLogisticUnit.id)|unique|length %}
                            <div class="icon-figure small {{ not (referencesQuantity != 0 or articlesQuantity != 0 or logisticUnitsQuantity != 0) ? 'd-none' }}">
                                {{ referencesQuantity != 0
                                    ? referencesQuantity
                                    : logisticUnitsQuantity != 0
                                        ? logisticUnitsQuantity
                                        : articlesQuantity
                                }}
                            </div>
                        </a>
                    </div>
                    <div class="col-auto ml-0">
                        <a class="header-icon notifications white" href="{{ path('notifications_index') }}">
                            <div class="icon-figure notification-figure small {{ not app.user.unreadNotifications or app.user.unreadNotifications.count == 0  ? 'd-none' }}">
                                {{ app.user.unreadNotifications.count }}
                            </div>
                        </a>
                    </div>
                    {% if hasDeliveryRights
                        or hasCollectRights
                        or hasHandlingRights
                        or hasDispatchRights
                        or hasTransferRights
                        or hasPurchaseRequestRights
                        or hasTransportRights %}
                        <div class="col-auto dropdown">
                            <button class="quick-plus" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="icon"></span>
                            </button>
                            <div id="quick-menu" class="dropdown-menu p-0 mt-3">
                                <p class="mx-3 quick-menu-title user-select-none">{{ trans('Demande', 'Général', 'Nouvelle demande') }}</p>

                                {% if hasDeliveryRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'demande_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('demande_index', {'open-modal': 'new'}) }}">
                                        <span class="wii-icon wii-icon-menu-delivery quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Livraison</span>
                                    </a>
                                {% endif %}

                                {% if hasCollectRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'collecte_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('collecte_index', {'open-modal': 'new'}) }}">
                                        <span class="wii-icon wii-icon-import quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Collecte</span>
                                    </a>
                                {% endif %}
                                {% if hasHandlingRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'handling_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('handling_index', {'open-modal': 'new'}) }}">
                                        <span class="wii-icon wii-icon-handling quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">{{ trans('Demande', 'Services', null, 'Service') }}</span>
                                    </a>
                                {% endif %}
                                {% if hasDispatchRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'dispatch_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('dispatch_index', {'open-modal': 'new'}) }}">
                                        <span class="wii-icon wii-icon-way quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">{{ trans('Demande', 'Acheminements', 'Général', 'Acheminement') }}</span>
                                    </a>
                                {% endif %}
                                {% if hasTransferRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'transfer_request_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('transfer_request_index', {'open-modal': 'new'}) }}"
                                       title="Transfert">
                                        <span class="wii-icon wii-icon-transfer quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Transfert</span>
                                    </a>
                                {% endif %}
                                {% if hasPurchaseRequestRights %}
                                    <a class="d-flex align-items-center"
                                       onclick="createPurchaseRequest()"
                                       title="Achat">
                                        <span class="wii-icon wii-icon-menu-achat quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Achat</span>
                                    </a>
                                {% endif %}
                                {% if hasTransportRights %}
                                    {% set isCurrentPage = (app.request.attributes.get('_route') == 'transport_request_index') %}
                                    <a class="d-flex align-items-center"
                                       onclick="{{ isCurrentPage ? "openQueryModal({'open-modal': 'new'}, event)" }}"
                                       href="{{ path('transport_request_index', {'open-modal': 'new'}) }}"
                                       title="Transport">
                                        <span class="wii-icon wii-icon-transport quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Transport</span>
                                    </a>
                                {% endif %}
                                {% if isCurrentClient(constant('App\\Service\\SpecificService::CLIENT_CEA_LETI')) and app.user.role.label == constant('App\\Entity\\Role::CLIENT_UTIL') %}
                                    <a class="d-flex align-items-center"
                                       href="https://forms.office.com/Pages/ResponsePage.aspx?id=NhgDLW_TpECPU10VG8Uz0ORO07yh8_dHp_ZRkVcMgQJURjJHVzA5RjNHSEFXTkM4T1lWSllSSkFZVy4u">
                                        <span class="wii-icon wii-icon-add quick-menu-icon mx-2"></span>
                                        <span class="flex-fill align-self-center">Créer un article</span>
                                    </a>
                                {% endif %}
                            </div>
                        </div>
                    {% endif %}
                {% endif %}

                {% if not isDashboardExt
                    and app.user is defined
                    and app.user
                    and app.user.username is defined %}
                    {% if hasRight(constant('App\\Entity\\Menu::PARAM'), constant('App\\Entity\\Action::SETTINGS_DISPLAY_USERS')) %}
                        <a class="col col-lg-auto user d-flex align-items-center"
                           href="{{ path('settings_item', {
                               'category': constant('App\\Controller\\Settings\\SettingsController::CATEGORY_USERS'),
                               'menu': constant('App\\Controller\\Settings\\SettingsController::MENU_USERS'),
                               'open-modal': 'edit',
                               'modal-edit-id': app.user.id
                           }) }}">
                            <div class="profile-picture">{{ app.user.username | first | upper }}</div>
                            <div class="username flex-fill text-center text-truncate">{{ app.user.username }}</div>
                        </a>
                    {% else %}
                        <div class="col col-lg-auto user d-flex align-items-center user-select-none">
                            <div class="profile-picture">{{ app.user.username | first | upper }}</div>
                            <div class="username flex-fill text-center text-truncate">{{ app.user.username }}</div>
                        </div>
                    {% endif %}


                    <div>
                        <div class="col col-lg-auto language-date pointer d-flex align-items-center user-select-none ml-3 dropdown dropdown-toggle"
                             data-toggle="dropdown"
                             aria-haspopup="true"
                             aria-expanded="false">
                            <img class="language-picture" src="{{ app.user.language.flag }}" alt="flag image">
                            <button class="language-date-btn flex-fill ml-1">
                                <span class="fa fa-angle-down"></span>
                            </button>
                        </div>
                            <div class="language-date-menu dropdown-menu dropdown-menu-right keep-open mt-1 p-0">
                                    <div class="language dropdown-item-sub mt-2 pl-3">
                                        {{ form.radio('user_language', null , false,  language_service.getLanguages, {
                                            iconClass : 'flag',
                                            labelClass : 'header'
                                        }) }}
                                    </div>
                                    <div class="date dropdown-item-sub p-1">
                                        <label class="label-date">{{ trans( 'Général', null, 'Header', 'Format de date') }}</label>
                                        {{ form.select('user_dateFormat', null, false, {
                                            items: dateFormat.dateFormat,
                                            type: null,
                                            search: false,
                                            value: dateFormat.value,
                                            noEmptyOption: true,
                                        }) }}
                                    </div>
                            </div>
                    </div>

                    <nav id="main-nav" class="text-white col-auto dropdown dropleft">
                        <div class="menu-button rounded pointer"
                             data-toggle="dropdown"
                             aria-haspopup="true"
                             aria-expanded="false">
                            <span class="icon-menu"></span>
                        </div>
                        <div class="dropdown-menu pointer mr-0">
                            <h1 class="dropdown-header d-flex d-md-none">
                                Menu
                                <button type="button" class="close-menu" aria-label="Close"></button>
                            </h1>
                            {% set menuConfig = getMenuConfig() %}
                            {% for itemMenu in menuConfig %}
                                {% if itemMenu.sub is defined %}
                                    <div class="text-white dropdown dropleft " onclick="event.stopPropagation()">
                                        <div class="pointer dropdown-item dropdown-item-sub"
                                             data-toggle="dropdown"
                                             aria-haspopup="true"
                                             aria-expanded="false">
                                            {% include 'menu/menu-item.html.twig' with {
                                                label: itemMenu.label,
                                                icon: itemMenu.icon is defined ? itemMenu.icon,
                                                title: itemMenu.title is defined ? itemMenu.title,
                                                isTranslation: itemMenu.isTranslation is defined and itemMenu.isTranslation,
                                                showArrow: true
                                            } %}
                                        </div>
                                        <div class="dropdown-menu dropdown-menu-sub pointer">
                                            {% for itemMenuSub in itemMenu.sub %}
                                                {% include 'menu/menu-item.html.twig' with {
                                                    label: itemMenuSub.label,
                                                    icon: itemMenuSub.icon is defined ? itemMenuSub.icon,
                                                    title: itemMenuSub.title is defined ? itemMenuSub.title,
                                                    isTranslation: itemMenuSub.isTranslation is defined and itemMenuSub.isTranslation,
                                                    url: itemMenuSub.url is defined ? itemMenuSub.url : (itemMenuSub.path is defined ? path(itemMenuSub.path) : '#'),
                                                    isExtern: itemMenuSub.isExtern is defined
                                                } %}
                                            {% endfor %}
                                        </div>
                                    </div>
                                {% else %}
                                    {% if itemMenu.label != constant('App\\Entity\\Menu::PARAM') | capitalize or (itemMenu.label == constant('App\\Entity\\Menu::PARAM') | capitalize and displaySettings()) %}
                                        {% include 'menu/menu-item.html.twig' with {
                                            label: itemMenu.label,
                                            icon: itemMenu.icon is defined ? itemMenu.icon,
                                            isTranslation: itemMenu.isTranslation is defined and itemMenu.isTranslation,
                                            url: itemMenu.url is defined ? itemMenu.url : (itemMenu.path is defined ? path(itemMenu.path) : '#'),
                                            title: itemMenu.title is defined ? itemMenu.title,
                                            isExtern: itemMenu.url is defined,
                                            arrowPlaceholder: true,
                                            iconPlaceholder: true
                                        } %}
                                    {% endif %}
                                {% endif %}
                            {% endfor %}
                        </div>
                    </nav>
                {% endif %}
            {% endif %}
        </div>
    </div>
</div>
