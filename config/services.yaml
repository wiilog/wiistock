imports:
    - { resource: './menu.yaml' }
    - { resource: './generated.yaml' }


parameters:
    cards_directory: "%kernel.project_dir%/public/uploads/cards"
    locale: '%env(APP_LOCALE)%'
    web_version: '7.11.4'
    nomade_version: '=7.11.3'
    nomade_apk: 'https://github.com/wiilog/wiistock-mobile/releases/download/v7.11.3/wiistock.apk'

    client: '%env(APP_CLIENT)%'
    appLocale: '%env(APP_LOCALE)%'

    # default value for env variable
    env(APP_FORBIDDEN_PHONES): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%cards_directory%'
    App\Twig\BarcodeExtension:
        arguments:
            $barcodeGenerator: '@sgk_barcode.generator'
    App\Service\Kiosk\KioskService:
        arguments:
            $barcodeGenerator: '@sgk_barcode.generator'
    App\Service\Document\TemplateDocumentService:
        arguments:
            $barcodeGenerator: '@sgk_barcode.generator'
    App\Service\PDFGeneratorService:
        arguments:
            $PDFGenerator: '@knp_snappy.pdf'
    App\Twig\MenuExtension:
        arguments:
            $menuConfig: '%menu_config%'

    App\Command\CacheClearCommand:
        arguments: ['@kernel', '@cache_clearer', '@filesystem']

    App\Command\DumpRoutingCommand:
        arguments: ['@kernel', '@fos_js_routing.extractor', '@serializer']

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
            - { db_table: 'user_session',
                db_id_col: 'id',
                db_data_col: 'data',
                db_time_col: 'time',
                db_lifetime_col: 'lifetime',
                lock_mode: '1',
                db_connection_options: '%env(json:DATABASE_SSL_CONFIG)%' }

    wiistock.specific_service:
        class: App\Service\SpecificService
        public: true

    App\EventListener\RequestListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest'}

    App\EventListener\RefArticleQuantityNotifier:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'postPersist', lazy: true, entity: 'App\Entity\ReferenceArticle' }
            - { name: 'doctrine.orm.entity_listener', event: 'postUpdate', lazy: true, entity: 'App\Entity\ReferenceArticle' }
    App\EventListener\ArticleQuantityNotifier:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'postPersist', lazy: true, entity: 'App\Entity\Article' }
            - { name: 'doctrine.orm.entity_listener', event: 'postUpdate', lazy: true, entity: 'App\Entity\Article' }
            - { name: 'doctrine.orm.entity_listener', event: 'postRemove', lazy: true, entity: 'App\Entity\Article' }
            - { name: 'doctrine.event_listener', event: 'postFlush', lazy: true, entity: 'App\Entity\Article' }
    App\EventListener\RefArticleStateNotifier:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'postUpdate', lazy: true, entity: 'App\Entity\Reception' }
            - { name: 'doctrine.orm.entity_listener', event: 'postPersist', lazy: true, entity: 'App\Entity\Reception' }
            - { name: 'doctrine.orm.entity_listener', event: 'postUpdate', lazy: true, entity: 'App\Entity\PurchaseRequest' }
            - { name: 'doctrine.orm.entity_listener', event: 'postPersist', lazy: true, entity: 'App\Entity\PurchaseRequest' }

    App\EventListener\TrackingMovementListener:
        tags:
            - { name: 'doctrine.orm.entity_listener', event: 'preRemove', lazy: true, entity: 'App\Entity\TrackingMovement' }
            - { name: 'doctrine.event_listener', event: 'postFlush', lazy: true, entity: 'App\Entity\TrackingMovement' }
            - { name: 'doctrine.event_listener', event: 'onFlush', lazy: true, entity: 'App\Entity\TrackingMovement' }

    App\EventListener\AnnotationListener:
        arguments:
            $mobileVersion: '%nomade_version%'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.controller_arguments', method: 'onRequest' }

    App\EventListener\ExceptionLoggerListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', priority: 1 }

    App\EventListener\FormExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', priority: 2 }

    App\EventListener\LogoutListener:
        tags:
            - { name: 'kernel.event_listener', event: 'Symfony\Component\Security\Http\Event\LogoutEvent', dispatcher: security.event_dispatcher.main }

    saml_user_factory:
        class: App\Security\SAMLUserFactory
