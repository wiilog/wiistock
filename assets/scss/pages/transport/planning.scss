@import "../../variables";

.type-header{
    display: flex;
    align-items: center;
    background-color: #F2F3F7;
    padding: 5px 15px;
    border: none !important;
    box-sizing: border-box;
    width: 100%;
}

.card-content{
    height:content-box;
}

.details{
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    justify-content: space-between;
}

.order-card {
    font-size: 14px;
    width: 100%;
    border-radius: 5px;
    padding: 0 5px 5px 5px;
    height: 100%;
    display: flex;
    flex-direction: column;

    &.to-assign {
        border-left: 5px solid rgb(215, 100, 51);
        background-color: rgba(215, 100, 51, 0.15);
    }

    &.assigned {
        border-left: 5px solid rgb(165, 215, 51);
        background-color: rgba(165, 215, 51, 0.15);
    }

    &.ongoing {
        border-left: 5px solid rgb(100, 51, 215);
        background-color: rgba(100, 51, 215, 0.15);
    }

    .transport-type {
        padding: 3px 7px;
        margin-top: 7px;
        background-color: #FFFFFF;
        border-radius: 4px;
        display: flex;
        align-items: center;
        width: fit-content;
        word-break: break-all;
        img {
            margin-right: 3px;
        }
    }
}


.wii-box{
    box-shadow: none;
}

.planning-card-container {
    width: 100%;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}

.bottom-border{
    height: 60vh;
}

.card-container{
    max-height:  60vh;
    overflow-y: auto;
    display: flex;
    flex-wrap: wrap;
}

.planning-card-content{
    width: 100%;
    height:100%;
}

@media screen and (min-width: 992px) {
    .planning-card{
        width: 50%;
    }
}
@media screen and (max-width: 992px) {
    .planning-card{
        width: 100%;
    }
}

// Les boutons
$wii-switch-height: $input-height;
.planning-switch {
    [value=to-assign] {
        &:not(:disabled), &:not(:disabled) + label {
            &:hover:not(:checked) {
                    color: lighten(#000000, 5%);
                    border-color: lighten(#D76433, 5%);
            }
        }

        &:checked, &:checked + label {
            background: rgba(215, 100, 51, 0.15);
            border-color: #D76433;
            &:hover {
                background: lighten(#F2F3F7, 5%) !important;
                color: lighten(#000000, 5%) !important;
                border-color: lighten(#D76433, 5%) !important;
            }
        }

        &, & + label {
            border: 1px solid #D76433;
            background: white;
            color: #000000;
        }
    }

    [value=assigned] {
        &:not(:disabled), &:not(:disabled) + label {
            &:hover:not(:checked) {
                color: lighten(#000000, 5%);
                border-color: lighten(#A5D733, 5%);
            }
        }

        &:checked, &:checked + label {
            background: rgba(165, 215, 51, 0.15);
            color: #000000;
            border-color: #A5D733;
            &:hover {
                background: lighten(#F2F3F7, 5%) !important;
                color: lighten(#000000, 5%) !important;
                border-color: lighten(#A5D733, 5%) !important;
            }
        }

        &, & + label {
            border: 1px solid #A5D733;
            background: white;
            color: #000000;
        }
    }

    [value=ongoing] {
        &:not(:disabled), &:not(:disabled) + label {
            &:hover:not(:checked) {
                color: lighten(#000000, 5%);
                border-color: lighten(#6433D7, 5%);
            }
        }

        &:checked, &:checked + label {
            background: rgba(100, 51, 215, 0.15);
            color: #000000;
            border-color: #6433D7;
            &:hover {
                background: lighten(#F2F3F7, 5%) !important;
                color: lighten(#000000, 5%) !important;
                border-color: lighten(#6433D7, 5%) !important;
            }
        }

        &, & + label {
            border: 1px solid #6433D7;
            background: white;
            color: #000000;
        }
    }

    input:not(:disabled), input:not(:disabled) + label {
        cursor: pointer;
    }

    input, input + label {
        appearance: none;
        -moz-appearance: none;
        outline: 0;
        padding: 0 15px;
        border-radius: 4px;
        height: $wii-switch-height;
        line-height: $wii-switch-height;
        font-weight: normal;
        transition: all 200ms linear;
        font-size: 1rem;
        margin: 0px 1px 0px 1px !important;
    }

    input:not(:disabled), input:not(:disabled) + label {
        cursor: pointer;

        &:hover:not(:checked) {
            color: lighten(#666666, 5%);
            border-color: lighten(#ffffff, 5%);
        }

    }

    display: inline-flex;
    flex-wrap: wrap;
    padding: 0;

    div{
        padding: 0px 5px 0px 5px;
    }

    input + label {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: map-get($spacers, 1);
    }

    input:not([content]) {
        display: none;
    }

    input:before, input + label:before {
        content: attr(content);
        height: $wii-switch-height;
        line-height: $wii-switch-height;
        text-align: center;
        padding: 0;
    }

    &:first-child {
        margin-top: 0 !important;
    }
}

.wii-icon-info {
    display: block;
    width: 15px;
    height: 15px;
    background-color: black;
}

.decrement-date, .increment-date {
    .icon {
        background-color: $primary;
        width: 15px;
        height: 15px;
        display: block;
        -webkit-mask: url("../../../../public/svg/arrow.svg") no-repeat center;

        &.disabled {
            background-color: #CBCBCB !important;
        }
    }

    &.decrement-date {
        .icon {
            transform: rotate(180deg);
        }
    }
}
